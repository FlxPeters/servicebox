# Generated by Django 3.0.6 on 2020-06-05 15:21

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('platforms', '0001_initial'),
        ('tenancy', '0001_initial'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Unique name of the service', max_length=200, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=True, populate_from='name')),
                ('is_external', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('PLANNED', 'Planed'), ('STAGED', 'Staged'), ('ACTIVE', 'Active'), ('DECOMMISSIONING', 'Decommissioning'), ('INACTIVE', 'Inactive')], default='ACTIVE', max_length=20)),
                ('business_overview', models.TextField(help_text='What business need is met by this service or system?')),
                ('technical_overview', models.TextField(blank=True, help_text='What kind of system is this', null=True)),
                ('service_level', models.CharField(blank=True, help_text='What explicit or implicit expectations are there from users or clients about the availability of the service or system?', max_length=200, null=True)),
                ('hours_of_operation', models.CharField(blank=True, help_text='During what hours does the service or system actually need to operate? Can portions or features of the system be unavailable at times if needed?', max_length=200, null=True)),
                ('operator', models.ForeignKey(help_text='Which tenant operates and runs this service?', on_delete=django.db.models.deletion.PROTECT, related_name='services_service_operator', to='tenancy.Tenant')),
                ('owner', models.ForeignKey(help_text='Which tenant owns this service from a bussiness perspective and is responsible for it?', on_delete=django.db.models.deletion.PROTECT, related_name='services_service_owner', to='tenancy.Tenant')),
                ('platform', models.ForeignKey(blank=True, help_text='Platform the service is running on', null=True, on_delete=django.db.models.deletion.PROTECT, to='platforms.Platform')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_type', models.CharField(choices=[('WEBSITE', 'Website'), ('DOCUMENTATION', 'Documentation'), ('LOGIN', 'Login')], default='WEBSITE', max_length=20)),
                ('url', models.URLField()),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.Service')),
            ],
        ),
    ]
